{"version":3,"sources":["components/Header.js","components/Formulario.js","helpers/helpers.js","components/Mensaje.js","components/MensajeResultado.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","cantidad","Formulario","props","setCantidad","plazo","setPlazo","setTotal","setCargando","useState","error","guardarError","onSubmit","e","preventDefault","isNaN","setTimeout","total","totalPlazo","totalCantidad","calcularTotal","className","type","placeholder","onChange","parseInt","target","value","Mensaje","MensajeResultado","toFixed","Spinner","App","componente","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LASeA,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACX,eAAE,WAAF,WACI,6BAAKD,IACL,4BAAIC,QCDZ,IAyEeC,EAzEI,SAACC,GAEhB,IAAQF,EAAkEE,EAAlEF,SAAUG,EAAwDD,EAAxDC,YAAaC,EAA2CF,EAA3CE,MAAOC,EAAoCH,EAApCG,SAAUC,EAA0BJ,EAA1BI,SAAUC,EAAgBL,EAAhBK,YAE1D,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OACI,eAAC,WAAD,WAEI,uBAAMC,SA3BW,SAACC,GACtBA,EAAEC,iBAEe,IAAbb,GAA4B,KAAVI,GAAgBU,MAAMV,IAAUU,MAAMd,GACxDU,GAAa,IAGjBA,GAAa,GACbH,GAAY,GAIZQ,YAAW,WAEP,IAAMC,ECzBX,SAAuBhB,EAAUI,GAGpC,IAAIa,EACAC,EAYJ,OAXIlB,GAAY,IACZkB,EAA2B,IAAXlB,EACTA,EAAW,KAAQA,EAAW,IACrCkB,EAA2B,GAAXlB,EACTA,EAAW,KAAQA,EAAW,IACrCkB,EAA2B,IAAXlB,EACTA,EAAW,MAClBkB,EAA2B,GAAXlB,GAIZI,GACJ,KAAK,EACDa,EAAwB,IAAXjB,EACb,MACJ,KAAK,EACDiB,EAAwB,GAAXjB,EACb,MACJ,KAAK,GACDiB,EAAwB,IAAXjB,EACb,MACJ,KAAK,GACDiB,EAAwB,GAAXjB,EAIrB,OAAOiB,EAAaC,EAAgBlB,EDNdmB,CAAcnB,EAAUI,GAGtCE,EAASU,GAETT,GAAY,KACb,OAOC,UACI,gCACI,sDACA,uBACIa,UAAU,eACVC,KAAK,SACLC,YAAY,gBAEZC,SAAU,SAACX,GAAD,OAAOT,EAAYqB,SAASZ,EAAEa,OAAOC,cAGvD,gCACI,qDACA,yBACIN,UAAU,eACVG,SAAU,SAACX,GAAD,OAAOP,EAASmB,SAASZ,EAAEa,OAAOC,SAFhD,UAII,wBAAQA,MAAM,GAAd,yBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,4BAGR,uBACIL,KAAK,SACLK,MAAM,WACNN,UAAU,mCAGhBX,EACI,mBAAGW,UAAU,QAAb,+CACA,SE/DHO,EALC,kBACZ,kFCSWC,EAVU,SAAC,GAAD,IAAG5B,EAAH,EAAGA,SAAUI,EAAb,EAAaA,MAAOY,EAApB,EAAoBA,MAApB,OACrB,sBAAKI,UAAU,yBAAf,UACI,yCACA,0DAA6BpB,KAC7B,uDAA0BI,KAC1B,yDAA4BY,EAAQZ,GAAOyB,QAAQ,GAAnD,OACA,uDAA2Bb,EAAOa,QAAQ,UCMnCC,G,MAXC,kBACZ,sBAAKV,UAAU,UAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,eC+CRW,MAhDf,WAEE,IAMIC,EANJ,EAAgCxB,mBAAS,GAAzC,mBAAOR,EAAP,KAAiBG,EAAjB,KACA,EAA0BK,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KACA,EAA0BG,mBAAS,GAAnC,mBAAOQ,EAAP,KAAcV,EAAd,KACA,EAAgCE,oBAAS,GAAzC,mBAAOyB,EAAP,KAAiB1B,EAAjB,KAmBA,OAbEyB,EADEC,EACW,cAAC,EAAD,IAEI,IAAVjB,GAAyB,KAAVZ,GAAgBU,MAAMV,IAAUU,MAAME,GAC/C,cAAC,EAAD,IAEA,cAAC,EAAD,CACXhB,SAAUA,EACVI,MAAOA,EACPY,MAAOA,IAMT,eAAC,WAAD,WACE,cAAC,EAAD,CACEjB,OAAO,2BAET,sBAAKqB,UAAU,YAAf,UAEE,cAAC,EAAD,CACEpB,SAAUA,EACVG,YAAaA,EACbC,MAAOA,EACPC,SAAUA,EACVW,MAAOA,EACPV,SAAUA,EACVC,YAAaA,IAEf,qBAAKa,UAAU,WAAf,SACGY,WCrCIE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7659f7d9.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nconst Header = ({ titulo, cantidad }) => (\r\n    < Fragment >\r\n        <h1>{titulo}</h1>\r\n        <p>{cantidad}</p>\r\n    </ Fragment>\r\n)\r\n\r\nexport default Header\r\n\r\n","import React, { Fragment, useState } from 'react';\r\nimport { calcularTotal } from '../helpers/helpers';\r\n\r\n\r\nconst Formulario = (props) => {\r\n\r\n    const { cantidad, setCantidad, plazo, setPlazo, setTotal, setCargando } = props\r\n    //definir state\r\n    const [error, guardarError] = useState(false)\r\n\r\n    //submit\r\n    const calcularPrestamo = (e) => {\r\n        e.preventDefault()\r\n        // validar\r\n        if (cantidad === 0 || plazo === '' || isNaN(plazo) || isNaN(cantidad)) {\r\n            guardarError(true)\r\n            return\r\n        }\r\n        guardarError(false)\r\n        setCargando(true)\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            //cotizar\r\n            const total = calcularTotal(cantidad, plazo)\r\n\r\n            //una vez calculado guardar total\r\n            setTotal(total)\r\n            //desabilito spinner\r\n            setCargando(false)\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <form onSubmit={calcularPrestamo}>\r\n                <div>\r\n                    <label>Cantidad Prestamo</label>\r\n                    <input\r\n                        className=\"u-full-width\"\r\n                        type=\"number\"\r\n                        placeholder=\"Ejemplo: 3000\"\r\n                        // usamos un evento(onchange) para actualizar el setCantidad\r\n                        onChange={(e) => setCantidad(parseInt(e.target.value))}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Plazo para pagar</label>\r\n                    <select\r\n                        className=\"u-full-width\"\r\n                        onChange={(e) => setPlazo(parseInt(e.target.value))}\r\n                    >\r\n                        <option value=\"\">Seleccionar</option>\r\n                        <option value=\"3\">3 meses</option>\r\n                        <option value=\"6\">6 meses</option>\r\n                        <option value=\"12\">12 meses</option>\r\n                        <option value=\"24\">24 meses</option>\r\n                    </select>\r\n                </div>\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Calcular\"\r\n                    className=\"button-primary u-full-width\"\r\n                />\r\n            </form>\r\n            {(error)\r\n                ? <p className=\"error\">Todos los campos son obligatorios</p>\r\n                : null\r\n            }\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Formulario;","export function calcularTotal(cantidad, plazo) {\r\n\r\n\r\n    let totalPlazo\r\n    let totalCantidad\r\n    if (cantidad <= 1000) {\r\n        totalCantidad = cantidad * .25\r\n    } else if (cantidad > 1000 && cantidad < 5000) {\r\n        totalCantidad = cantidad * .20\r\n    } else if (cantidad > 5000 && cantidad > 10000) {\r\n        totalCantidad = cantidad * .15\r\n    } else if (cantidad > 10000) {\r\n        totalCantidad = cantidad * .10\r\n    }\r\n\r\n    //calcular plazo\r\n    switch (plazo) {\r\n        case 3:\r\n            totalPlazo = cantidad * .05\r\n            break;\r\n        case 6:\r\n            totalPlazo = cantidad * .1\r\n            break\r\n        case 12:\r\n            totalPlazo = cantidad * .15\r\n            break\r\n        case 24:\r\n            totalPlazo = cantidad * .2\r\n            break\r\n        default:\r\n    }\r\n    return totalPlazo + totalCantidad + cantidad\r\n}","import React from 'react';\r\n\r\nconst Mensaje = () => (\r\n    <p>Agrega una cantidad y plazo a pagar para cotizar</p>\r\n)\r\n\r\n\r\nexport default Mensaje;","import React from 'react';\r\n\r\nconst MensajeResultado = ({ cantidad, plazo, total }) => (\r\n    <div className=\"u-full-width resultado\">\r\n        <h2>Resumen</h2>\r\n        <p>cantidad solicitada es: ${cantidad}</p>\r\n        <p>plazo solicitada es: ${plazo}</p>\r\n        <p>Su pago mensual es de: {(total / plazo).toFixed(2)} </p>\r\n        <p>total solicitada es: ${(total).toFixed(2)}</p>\r\n    </div>\r\n)\r\n\r\nexport default MensajeResultado;","import React from 'react';\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => (\r\n    <div className=\"spinner\">\r\n        <div className=\"rect1\"></div>\r\n        <div className=\"rect2\"></div>\r\n        <div className=\"rect3\"></div>\r\n        <div className=\"rect4\"></div>\r\n        <div className=\"rect5\"></div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default Spinner;","import React, { Fragment, useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Formulario from './components/Formulario';\r\nimport Mensaje from './components/Mensaje';\r\nimport MensajeResultado from './components/MensajeResultado';\r\nimport Spinner from './components/Spinner';\r\n\r\n\r\nfunction App() {\r\n  //definir state\r\n  const [cantidad, setCantidad] = useState(0)\r\n  const [plazo, setPlazo] = useState('')\r\n  const [total, setTotal] = useState(0)\r\n  const [cargando, setCargando] = useState(false)\r\n\r\n  //carga condicional de componentes\r\n  let componente\r\n\r\n  if (cargando) {\r\n    componente = <Spinner />\r\n  }\r\n  else if (total === 0 || plazo === '' || isNaN(plazo) || isNaN(total)) {\r\n    componente = <Mensaje />\r\n  } else {\r\n    componente = <MensajeResultado\r\n      cantidad={cantidad}\r\n      plazo={plazo}\r\n      total={total}\r\n    />\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        titulo=\"Cotizador de Prestamos\"\r\n      />\r\n      <div className=\"container\">\r\n        {/* pasamos el state via props */}\r\n        <Formulario\r\n          cantidad={cantidad}\r\n          setCantidad={setCantidad}\r\n          plazo={plazo}\r\n          setPlazo={setPlazo}\r\n          total={total}\r\n          setTotal={setTotal}\r\n          setCargando={setCargando}\r\n        />\r\n        <div className=\"mensajes\">\r\n          {componente}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}